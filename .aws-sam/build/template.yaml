AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Salimon Netwatch Web Application
Parameters:
  Env:
    Type: String
    Default: dev
Resources:
  WebappBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: salimon-netwatch-${Env}
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
  WebappBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: WebappBucket
      PolicyDocument:
        Statement:
        - Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: ${WebappBucket.Arn}/*
  CloudFrontRewriteFunction:
    Type: AWS::CloudFront::Function
    Properties:
      Name:
        Fn::Sub: rewritespa-netwatch-${Env}
      AutoPublish: true
      FunctionCode: "function handler(event) {\n  var request = event.request;\n \
        \ var uri = request.uri;\n\n  // If path does not contain a file extension,\
        \ rewrite to /index.html\n  if (!uri.includes('.') && !uri.endsWith('/'))\
        \ {\n    request.uri = '/index.html';\n  }\n  return request;\n}\n"
      FunctionConfig:
        Comment: Rewrite all SPA routes to index.html
        Runtime: cloudfront-js-1.0
  NoCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name:
          Fn::Sub: no-cache-policy-${Env}
        DefaultTTL: 0
        MaxTTL: 0
        MinTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          EnableAcceptEncodingGzip: false
          EnableAcceptEncodingBrotli: false
          HeadersConfig:
            HeaderBehavior: none
          CookiesConfig:
            CookieBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none
  StaticAssetsCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name:
          Fn::Sub: static-assets-policy-${Env}
        DefaultTTL: 86400
        MaxTTL: 31536000
        MinTTL: 86400
        ParametersInCacheKeyAndForwardedToOrigin:
          EnableAcceptEncodingGzip: true
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: none
          CookiesConfig:
            CookieBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - Id: S3Origin
          DomainName:
            Fn::GetAtt:
            - WebappBucket
            - DomainName
          S3OriginConfig: {}
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId:
            Ref: NoCachePolicy
          FunctionAssociations:
          - EventType: viewer-request
            FunctionARN:
              Fn::GetAtt:
              - CloudFrontRewriteFunction
              - FunctionMetadata.FunctionARN
        CacheBehaviors:
        - PathPattern: '*.js'
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId:
            Ref: StaticAssetsCachePolicy
        - PathPattern: '*.css'
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId:
            Ref: StaticAssetsCachePolicy
        - PathPattern: '*.png'
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId:
            Ref: StaticAssetsCachePolicy
        - PathPattern: '*.svg'
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId:
            Ref: StaticAssetsCachePolicy
        - PathPattern: '*.woff2'
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId:
            Ref: StaticAssetsCachePolicy
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
